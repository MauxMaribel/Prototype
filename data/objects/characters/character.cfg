{
	id: "character",
	is_strict: true,

	editor_info: {
		category: "character",

	},

	properties: {
		game_controller: { type: "null|obj game_controller" },

		_unit_info: { type: "null|class unit" },
		unit_info: "class unit<- _unit_info",

		unit_info_updated: "def() ->commands [
			set(mid_x, unit_info.loc.x*tile_dim + tile_dim/2 + position_offset.x),
			set(mid_y, unit_info.loc.y*tile_dim + tile_dim/2 + position_offset.y),
			set(_anim_loc, null),
			set(zorder, 100 + unit_info.loc.y),
		]",

		//how far to offset this character from the center
		//of the tile. Use this to adjust their position
		//in a tile.
		position_offset: "[int,int] :: [0,0]",

		calculate_loc: "[int,int] ::
		[
			(mid_x - tile_dim/2 - position_offset.x)/tile_dim,
			(mid_y - tile_dim/2 - position_offset.y)/tile_dim,
		]
		",

		walk_to_tile_blocking: "def(Loc dst) ->commands

		animate(me, {
			mid_x: dst.x*TILE_DIM + TILE_DIM/2 + position_offset.x,
			mid_y: dst.y*TILE_DIM + TILE_DIM/2 + position_offset.y,
		}, {
			easing: lib.math.linear,
			duration: 12,
			sleep: true,
			name: 'walk',
			replace_existing: false,

			on_begin: ; [
				set(facing, if(dst.x < loc.x, -1, 1)),
				if(desired_anim != animation, set(animation, desired_anim)),
				set(zorder, 100 + dst.y),
			],

			on_complete: ; [
				set(_anim_loc, dst),
			],
		})

		where desired_anim = if(walk_anim in available_animations, walk_anim, stand_anim in available_animations, stand_anim, animation)
		where stand_anim = sprintf('stand_%s', dir)
		where walk_anim = sprintf('walk_%s', dir)
		where dir = if(dst.y < loc.y, 'up', dst.y > loc.y, 'down', 'right')
		",

		_anim_loc: { type: "null|Loc" },

		loc: "Loc :: _anim_loc or unit_info.loc",

		tile_dim: "int :: 64",
	},

	events: {
		click: "if(game_controller,
			if(button = 1, game_controller.character_clicked(me),
			   button = 3, game_controller.character_right_clicked(me)),
		) where button = int<- arg.mouse_button",
	},
}
