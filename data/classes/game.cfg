{
	generate_unit: "def(string id) ->map
		res + { max_life: res['life'] }
		where res = map<- fold(map((map<- doc[id]), {(key): if(value is string and value != '' and value[0] = '$', eval(value[1:]), value)} ), a+b, {}) + {id: id}
		where doc = map<- get_document('data/units.cfg')
	",

	generate_prop: "def(string id) ->map
		{ id: id } + res + { max_life: res['life'] }
		where res = map<- fold(map((map<- doc[id]), {(key): if(value is string and value != '' and value[0] = '$', eval(value[1:]), value)} ), a+b, {}) + {id: id}
		where doc = map<- get_document('data/props.cfg')
	",

	spells: "{string -> class spell} ::
	query_cache(global_cache(), null,
		fold(
			map(doc,
				{(key): construct('spell', value + {id: key}) }
			),
			a+b, {}
		)
		where doc = {string -> map} <- get_document('data/spells.cfg')
	)
	",

	get_spell: "def(string id) ->class spell
		class spell<- spells[id]
	",

}
